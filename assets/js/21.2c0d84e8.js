(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{379:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基础使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[t._v("#")]),t._v(" 基础使用")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- v-model='msg' 表达式 表示双向数据绑定的指定 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- {{msg}}插值语法 --\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{msg}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 体验Vue的双向数据绑定")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n      需求:\n        在文本框中输入的东西, p标签内就显示\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      el"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'猪妈妈'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n      Vue中的双标签中间显示的内容如果是动态的, 就使用插值语法: {{表达式}}\n      表单标签要显示内容, 或获取输入的内容, 使用双向数据绑定的指令: v-model= '表达式'\n      Vue中的标签中使用了属性和值的写法, 就是键值对, 但是v-开头的叫指令\n      如果在标签中看到了v-开头的东西, 即指令\n\n      data中属性和值是键值对的关系, data中的叫属性, html中用到了叫表达式\n      v-model 指令: 双向数据绑定的指令\n      双向数据绑定: 数据变化了, 界面也会随之变化, 界面变化了, 数据也会变化\n\n      html中的#app 是容器\n      #app内部所有的html内容即为模板\n      new Vue({\n        el : '#app'--\x3e 根据选择器获取html中对应的容器, 目的: 为了操作容器中模板的内容\n        data: {} --\x3e 对象, 相关的数据都会在data中定义, data中的内容一般都是键值对的方式, 里面内容是属性和值的关系\n      })\n      {{msg}} --\x3e 插值语法, msg叫表达式\n      v-model: 首先是一个属性, 但是由于是v-开头, 所以在Vue中叫做指令, v-model:双向数据绑定的指令\n      v-model='msg' --\x3e msg为表达式, 这个值是动态的\n      差值语法一般用于成对的标签中间, v-model一般用在表单标签中\n    */")]),t._v("\n  ")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"模板语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板语法"}},[t._v("#")]),t._v(" 模板语法")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("{{msg}}  --\x3e 差值一般用在成对的标签中显示\nconst vm = new Vue({}) {} <-- 放置配置对象\nel \t     <-- 容器\nmethods  <-- 定义方法\ncomputed <-- 计算属性, 当某个属性的值发生变化的时候, 和其相关的属性的值会自动发生变化\nwatch    <-- 监听(监听/侦听), 当某个数据的值发生变化, 需要做相关的操作的时候\nv-model  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("双向数据绑定的指令,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("一般用在表单中,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("该属性是动态的")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-bind")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("强制数据绑定,")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("简写")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":属性名")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("表达式"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("一般用在普通标签上")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-on")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("事件监听的指令,")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("简写")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@事件名")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("回调函数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("绑定事件的时候使用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-if")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("条件渲染指令")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("设置标签显示或隐藏")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("(在DOM树中可能不存在)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-else")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("配合v-if使用")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("(在DOM树中可能不存在)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-else-if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("配合v-if使用")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("(在DOM树中可能不存在)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-show")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("条件渲染指令")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("设置标签显示或隐藏")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("(在DOM树中一直存在)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-for")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("用来遍历数组或对象")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("数组:")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("(item,index)")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("数组名字")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 数组中的每一项数据, index索引\n\t\titem in 数组名字\n\t对象:\n\t\t(value,key,index) in 对象名字\n\t\t\tkey   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("对象中的属性名字")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("对象中的值")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("index")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("$refs")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("Vue实例对象的一个属性,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("该属性可以获取DOM元素,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("进行DOM操作")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("Vue中元素的样式操作:")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class方式,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("可以使用对象模式,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("数组模式,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("动态,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("静态")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style方式,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("对象模式,")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("数组模式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(".prevent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("阻止默认行为跳转")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click.prevent")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.stop "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("阻止事件冒泡")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click.stop")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n.enter "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("只要按下了回车就会触发该事件的回调函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(".13")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("同上")]),t._v("\n    \t "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("keyup.13")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("submit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nv-html "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("相当于DOM中的innerHTML")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("<p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-html")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{content}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\nv-text <-- 相当于DOM中innerText/textContent --\x3e 和插值语法结果一样\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{content}}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"脚手架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚手架"}},[t._v("#")]),t._v(" 脚手架")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n *  安装脚手架命令  脚手架2的命令\n *  npm install -g vue-cli\n *  下载模版命令\n *  vue init webpack my-project\n *\n *  npm run dev 运行项目命令---不会自动打开浏览器\n *  npm run build 打包 产生dist目录\n *  serve dist 运行打包文件\n *\n *  npm start 可以直接运行,此时不会自动打开浏览器\n *  如果你用的是yarn 下载的,那么运行项目的时候  yarn 是不需要写run的\n *\n *  在config目录中的index.js文件中的第18行代码:autoOpenBrowser: true 修改为true,自动打开浏览器\n *  在build目录中的webpack.base.conf.js文件中第25行: app: './src/main.js' 是整个项目的入口文件\n * node_modules 依赖包目录\n * eslint检查的问题\n * build目录是webpack的相关的设置\n * config目录配置文件,里面的index.js中可以设置是否让浏览器自动打开\n * dist目录---打包后的目录文件\n * node-modules--依赖包---相关的文件\n * static---存放的是静态资源,css样式,图片,字体\n * babelrc---文件--babel的相关配置----mint-ui中配置\n * .eslintignore----\x3e可以直接用 *.vue 或者*.js 的方式全局的忽略检查\n * .eslintrc.js 文件中 rules---一项一项的配置eslint的相关检查----看我操作\n * index.html----项目主入口html文件\n * package.json配置文件\n * src目录\n * main.js程序的主入口的js文件\n * App.vue父级组件文件\n * assets目录---图片---直接干掉----不用\n * components目录-------里面放的都是组件文件(.vue后缀的文件,叫组件文件)\n * 组件:html+css+js----形成的一个.vue文件---组件\n * 组件:具有一定功能效果的集合,里面包含html+css+js\n * 抽取了多个的组件,就形成了组件化\n * 源码的分析:\n *\n *\n * scoped:有可能会影响父子级组件之间的样式\n */")]),t._v("\n")])])]),s("h3",{attrs:{id:"组件通信问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通信问题"}},[t._v("#")]),t._v(" 组件通信问题")]),t._v(" "),s("h4",{attrs:{id:"父子通信利用-props"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子通信利用-props"}},[t._v("#")]),t._v(" 父子通信利用 props")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("List")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":todos")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("todos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":toggleTodo")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("toggleTodo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" props: ['todos', 'toggleTodo']\n<-- 通过数组接收 props: { todos: Array, toogleTodo: Function } <--- 通过对象\n")])])]),s("h4",{attrs:{id:"可以通过-事件名来传递-利用-emit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可以通过-事件名来传递-利用-emit"}},[t._v("#")]),t._v(" 可以通过@事件名来传递,利用$emit")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Header")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@addTodo")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("addTodo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" this.$emit('addTodo', todo) <--\n用$emit去接收传来的数据\n")])])]),s("ul",[s("li",[t._v("Vue 中组件之间的通信方式:")]),t._v(" "),s("li",[t._v("props\n"),s("ul",[s("li",[t._v("通信方式\n"),s("ul",[s("li",[t._v("父子组件之间")])])])])]),t._v(" "),s("li",[t._v("自定义事件\n"),s("ul",[s("li",[t._v("通信方式\n"),s("ul",[s("li",[t._v("父子组件之间")])])])])]),t._v(" "),s("li",[t._v("PubSub\n"),s("ul",[s("li",[t._v("不属于 Vue")]),t._v(" "),s("li",[t._v("通信方式\n"),s("ul",[s("li",[t._v("任意组件")])])])])]),t._v(" "),s("li",[t._v("事件总线\n"),s("ul",[s("li",[t._v("就是在 Vue 的原型上添加一个属性, 该属性介绍 Vue 的实例, 任意组件都要继承自 Vue,所以都可以直接使用该属性, 调用相关的方法, 从而实现任意组件之间通信")]),t._v(" "),s("li",[t._v("通信方式\n"),s("ul",[s("li",[t._v("任意组件")])])])])]),t._v(" "),s("li",[t._v("插槽(命名插槽/具名插槽)\n"),s("ul",[s("li",[t._v("占位, 很多组件中(多个页面)用到了相同的结构和样式, 而且这些组件中有的地方用到了不同的数据")]),t._v(" "),s("li",[t._v("通信方式\n"),s("ul",[s("li",[t._v("父子(子父)")])])])])]),t._v(" "),s("li",[t._v("Vuex\n"),s("ul",[s("li",[t._v("任意组件")])])])]),t._v(" "),s("h4",{attrs:{id:"通过消息订阅和发布-pubsub-不属于-vue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过消息订阅和发布-pubsub-不属于-vue"}},[t._v("#")]),t._v(" 通过消息订阅和发布 pubsub(不属于 Vue)")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("yarn add pubsub-js import PubSub from 'pubsub-js' 然后在mounted里面\nPubSub.subscribe('delTodo', (msg, data) => { // 删除数据 this.delTodo(data) })\n<-- 发送 PubSub.publish('delTodo', this.index) <-- 接收\n")])])]),s("ol",[s("li",[t._v("Vue 的理解\nVue 是渐进式的 JavaScript 框架\n数据绑定,模版解析,组件化,虚拟 DOM")]),t._v(" "),s("li",[t._v("Vue 中的常见指令\nv-if(v-else,v-else-if),v-show,v-for,v-model,v-on,v-bind,v-text,v-html")]),t._v(" "),s("li",[t._v("Vue 中组件之间通信的方式理解\nprops,自定义事件,事件总线,插槽,Vuex,PubSub")]),t._v(" "),s("li",[t._v("Vue 中如何发送异步请求\nvue-source,axios")]),t._v(" "),s("li",[t._v("Vue 中路由的理解\n路由的解释,router-link(router-view),声明式路由,编程式路由,路由传参")]),t._v(" "),s("li",[t._v("Vuex 的理解\nstate,mutations,actions,getters\n组件内部修改状态数据的流程\n组件内部如何获取状态数据 6.数据代理的理解\n能够说出数据代理的原理 7.模版解析的理解(事件指令,普通指令)\n能够说出模版解析是怎么回事,事件指令和普通指令及插值是如何解析的")])]),t._v(" "),s("h3",{attrs:{id:"路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[t._v("#")]),t._v(" 路由")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("vue")]),t._v("是可以使用 "),s("code",[t._v("vue-router")]),t._v("，实现单页面应用（页面不刷新的情况，可以显示不同的内容（不同组件切换的显示结果）")])]),t._v(" "),s("li",[s("p",[t._v("路由：")]),t._v(" "),s("ul",[s("li",[t._v("前端路由和后端路由前端路由：\n"),s("ul",[s("li",[t._v("就足一种映射关系，链接地址对应着某个组件，跳转地址，对应的组件内容就会显示")]),t._v(" "),s("li",[t._v("链接地址发生变化，根据地址，在页面的指令的位置可以渲染对应的组件内容就会显示")]),t._v(" "),s("li",[t._v("链接地址，就是一个 a 标答中有 href，href 有地址")]),t._v(" "),s("li",[t._v("路由链接"),s("code",[t._v("router-link")]),t._v("标答中有 to='地址'，最终在页面中会渲染成一对 a 标签，a 标签就是所谓的链接地址")]),t._v(" "),s("li",[t._v("路由视图: "),s("code",[t._v("router-view")]),t._v("标签的位置最终会渲染路由地址对应的组件内容")]),t._v(" "),s("li",[t._v("组件: 普通组件和路由组件")]),t._v(" "),s("li",[t._v("普通组件：一般定义在 components 目录中，路由组件，般定义在 pages 目录中")]),t._v(" "),s("li",[t._v("路由的使用：首先通过 "),s("code",[t._v("npm install vue- router 或 yarn add vue-router")]),t._v("安装这个包定义一个 router 目录，定义一个 "),s("code",[t._v("index.js")]),t._v("文件")]),t._v(" "),s("li",[t._v("先引入路由包，声明使用路由，实例化路由器对象，并暴露出去，在 "),s("code",[t._v("main.js")]),t._v("中引入路由器对象并在实例化"),s("code",[t._v("vue")]),t._v("的时候注册路由器")]),t._v(" "),s("li",[t._v("普通的组件一旦进行路由的配置了，此时这个普通的组件就变成了路由组件")]),t._v(" "),s("li",[t._v("定义路由的时候，每个路由都是一个对象 Route，每个对象中都有 path 属性和 component 属性")]),t._v(" "),s("li",[t._v("路由在跳转的时候，浏览器的地址栏中有的时候会有#，有的时候会没有")]),t._v(" "),s("li",[t._v("配置路由的时候可以通过 mode 属性来设置浏览器的地址栏中是否有")]),t._v(" "),s("li",[t._v('默认是 hash 模式，有，如果 mode；" history’此时浏览器的地址栏中没有')]),t._v(" "),s("li",[t._v("路由：一级路由，二级路由，三级路由")]),t._v(" "),s("li",[t._v('路由重定向：{path："地址\'， redirect：地址"}')]),t._v(" "),s("li",[t._v("路由传参:可以通过"),s("code",[t._v("params")]),t._v("和"),s("code",[t._v("query")]),t._v("的形式-----props---meta")]),t._v(" "),s("li",[t._v("prams 形式:布尔模式,对象模式,函数模式")]),t._v(" "),s("li",[t._v("一旦路由器对象被注册("),s("code",[t._v("main.js")]),t._v("中),每个组件的实例对象中都有一个$router 属性")]),t._v(" "),s("li",[t._v("通过 router-link 配合 router-view,不写 js 代码的方式可以直接实现路由跳转,这种方式:声明式路由")]),t._v(" "),s("li",[t._v("如果通过 js 代码的方式实现路由跳转,这种方式:编程式路由")]),t._v(" "),s("li",[t._v("router.push()和 router.replace() 两个方法可以实现编程式路由")]),t._v(" "),s("li",[t._v("push()有上一次的历史记录")]),t._v(" "),s("li",[t._v("replace()没有上一次历史记录")]),t._v(" "),s("li",[t._v("back()可以返回上一次的路由")]),t._v(" "),s("li",[t._v("router-link 和 push()都有上一次记录,跳转结果一样,router-link 这种方式是否可以实现 replace 的效果,可以,只需要在 router-link 标签上添加一个 replace 属性")]),t._v(" "),s("li",[t._v("keep-alive 标签是"),s("code",[t._v("Vue")]),t._v("中提供的内置组件,可以用来缓存路由组件")]),t._v(" "),s("li",[t._v("router-view 标签可以进行传参,在需要该参数的组件中使用 props 进行接口,即可使用了")])])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);